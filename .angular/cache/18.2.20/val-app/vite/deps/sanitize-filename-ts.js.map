{
  "version": 3,
  "sources": ["../../../../../../node_modules/truncate-utf8-bytes/lib/truncate.js", "../../../../../../node_modules/utf8-byte-length/browser.js", "../../../../../../node_modules/truncate-utf8-bytes/browser.js", "../../../../../../node_modules/sanitize-filename-ts/build/index.js"],
  "sourcesContent": ["'use strict';\n\nfunction isHighSurrogate(codePoint) {\n  return codePoint >= 0xd800 && codePoint <= 0xdbff;\n}\nfunction isLowSurrogate(codePoint) {\n  return codePoint >= 0xdc00 && codePoint <= 0xdfff;\n}\n\n// Truncate string by size in bytes\nmodule.exports = function truncate(getLength, string, byteLength) {\n  if (typeof string !== \"string\") {\n    throw new Error(\"Input must be string\");\n  }\n  var charLength = string.length;\n  var curByteLength = 0;\n  var codePoint;\n  var segment;\n  for (var i = 0; i < charLength; i += 1) {\n    codePoint = string.charCodeAt(i);\n    segment = string[i];\n    if (isHighSurrogate(codePoint) && isLowSurrogate(string.charCodeAt(i + 1))) {\n      i += 1;\n      segment += string[i];\n    }\n    curByteLength += getLength(segment);\n    if (curByteLength === byteLength) {\n      return string.slice(0, i + 1);\n    } else if (curByteLength > byteLength) {\n      return string.slice(0, i - segment.length + 1);\n    }\n  }\n  return string;\n};", "'use strict';\n\nfunction isHighSurrogate(codePoint) {\n  return codePoint >= 0xd800 && codePoint <= 0xdbff;\n}\nfunction isLowSurrogate(codePoint) {\n  return codePoint >= 0xdc00 && codePoint <= 0xdfff;\n}\n\n// Truncate string by size in bytes\nmodule.exports = function getByteLength(string) {\n  if (typeof string !== \"string\") {\n    throw new Error(\"Input must be string\");\n  }\n  var charLength = string.length;\n  var byteLength = 0;\n  var codePoint = null;\n  var prevCodePoint = null;\n  for (var i = 0; i < charLength; i++) {\n    codePoint = string.charCodeAt(i);\n    // handle 4-byte non-BMP chars\n    // low surrogate\n    if (isLowSurrogate(codePoint)) {\n      // when parsing previous hi-surrogate, 3 is added to byteLength\n      if (prevCodePoint != null && isHighSurrogate(prevCodePoint)) {\n        byteLength += 1;\n      } else {\n        byteLength += 3;\n      }\n    } else if (codePoint <= 0x7f) {\n      byteLength += 1;\n    } else if (codePoint >= 0x80 && codePoint <= 0x7ff) {\n      byteLength += 2;\n    } else if (codePoint >= 0x800 && codePoint <= 0xffff) {\n      byteLength += 3;\n    }\n    prevCodePoint = codePoint;\n  }\n  return byteLength;\n};", "'use strict';\n\nvar truncate = require(\"./lib/truncate\");\nvar getLength = require(\"utf8-byte-length/browser\");\nmodule.exports = truncate.bind(null, getLength);", "\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst truncate_utf8_bytes_1 = __importDefault(require(\"truncate-utf8-bytes\"));\n/**\n * Replaces characters in strings that are illegal/unsafe for filenames.\n * Unsafe characters are either removed or replaced by a substitute set\n * in the optional `options` object.\n *\n * Illegal Characters on Various Operating Systems\n * / ? < > \\ : * | \"\n * https://kb.acronis.com/content/39790\n *\n * Unicode Control codes\n * C0 0x00-0x1f & C1 (0x80-0x9f)\n * http://en.wikipedia.org/wiki/C0_and_C1_control_codes\n *\n * Reserved filenames on Unix-based systems (\".\", \"..\")\n * Reserved filenames in Windows (\"CON\", \"PRN\", \"AUX\", \"NUL\", \"COM1\",\n * \"COM2\", \"COM3\", \"COM4\", \"COM5\", \"COM6\", \"COM7\", \"COM8\", \"COM9\",\n * \"LPT1\", \"LPT2\", \"LPT3\", \"LPT4\", \"LPT5\", \"LPT6\", \"LPT7\", \"LPT8\", and\n * \"LPT9\") case-insesitively and with or without filename extensions.\n *\n * Capped at 255 characters in length.\n * http://unix.stackexchange.com/questions/32795/what-is-the-maximum-allowed-filename-and-folder-size-with-ecryptfs\n *\n * @param  {String} input   Original filename\n * @param  {Object} options {replacement: String}\n * @return {String}         Sanitized filename\n */\nconst illegalRe = /[\\/\\?<>\\\\:\\*\\|\":]/g;\n/* tslint:disable-next-line:no-control-regex */\nconst controlRe = /[\\x00-\\x1f\\x80-\\x9f]/g;\nconst reservedRe = /^\\.+$/;\nconst windowsReservedRe = /^(con|prn|aux|nul|com[0-9]|lpt[0-9])(\\..*)?$/i;\nconst windowsTrailingRe = /[\\. ]+$/;\nfunction replace(input, replacement) {\n  const sanitized = input.replace(illegalRe, replacement).replace(controlRe, replacement).replace(reservedRe, replacement).replace(windowsReservedRe, replacement).replace(windowsTrailingRe, replacement);\n  return truncate_utf8_bytes_1.default(sanitized, 255);\n}\nfunction sanitize(input, options) {\n  const replacement = options && options.replacement || \"\";\n  const output = replace(input, replacement);\n  if (replacement === \"\") {\n    return output;\n  }\n  return replace(output, \"\");\n}\nexports.sanitize = sanitize;"],
  "mappings": "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",
  "names": ["require_browser"]
}
